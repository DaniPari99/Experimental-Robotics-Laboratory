<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="robot__states_8py" kind="file" language="Python">
    <compoundname>robot_states.py</compoundname>
    <innerclass refid="classrobot__states_1_1_robot_state" prot="public">robot_states::RobotState</innerclass>
    <innernamespace refid="namespacerobot__states">robot_states</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>threading</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>random</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Import<sp/>constant<sp/>name<sp/>defined<sp/>to<sp/>structure<sp/>the<sp/>architecture.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>arch_skeleton<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>architecture_name_mapper<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>anm</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Import<sp/>the<sp/>messages<sp/>used<sp/>by<sp/>services<sp/>and<sp/>publishers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>std_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Bool</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>arch_skeleton.srv<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>GetPose,<sp/>GetPoseResponse,<sp/>SetPose,<sp/>SetPoseResponse</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/>A<sp/>tag<sp/>for<sp/>identifying<sp/>logs<sp/>producer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">LOG_TAG<sp/>=<sp/>anm.NODE_ROBOT_STATE</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>node<sp/>manager<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">#<sp/>This<sp/>class<sp/>defines<sp/>two<sp/>services<sp/>to<sp/>get<sp/>and<sp/>set<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">#<sp/>robot<sp/>pose,<sp/>and<sp/>a<sp/>publisher<sp/>to<sp/>notify<sp/>that<sp/>the<sp/>battery<sp/>is<sp/>low.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classrobot__states_1_1_robot_state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrobot__states_1_1_robot_state" kindref="compound">RobotState</ref>:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self):</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialise<sp/>this<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.init_node(anm.NODE_ROBOT_STATE,<sp/>log_level=rospy.INFO)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialise<sp/>robot<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a0894b6337f559998dbcab19f0343f20e" kindref="member">_pose</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialise<sp/>battery<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1ac293784a2205f9675f0ec49a3aa274a2" kindref="member">_battery_low</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialise<sp/>randomness,<sp/>if<sp/>enabled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a07dcafb11d018ed0754fecd03f089b56" kindref="member">_randomness</ref><sp/>=<sp/>rospy.get_param(anm.PARAM_RANDOM_ACTIVE,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a07dcafb11d018ed0754fecd03f089b56" kindref="member">_randomness</ref>:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a8612658c942b05d58aacdbcae69dc44a" kindref="member">_random_battery_time</ref><sp/>=<sp/>rospy.get_param(anm.PARAM_BATTERY_TIME,<sp/>[15.0,<sp/>40.0])</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>(f</highlight><highlight class="stringliteral">&apos;Random-based<sp/>battery<sp/>low<sp/>notification<sp/>active:<sp/>the<sp/>battery<sp/>change<sp/>state<sp/>(i.e.,<sp/>low/high)<sp/>with<sp/>a<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&apos;delay<sp/>in<sp/>the<sp/>range<sp/>of<sp/>[{self._random_battery_time[0]},<sp/>{self._random_battery_time[1]})<sp/>seconds.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>LOG_TAG))</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>services.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.Service(anm.SERVER_GET_POSE,<sp/>GetPose,<sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a76199309686fac776fe4427a8e549264" kindref="member">get_pose</ref>)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.Service(anm.SERVER_SET_POSE,<sp/>SetPose,<sp/>self.<ref refid="classrobot__states_1_1_robot_state_1abfd8335889b8cb8aff179324e54bf326" kindref="member">set_pose</ref>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Start<sp/>publisher<sp/>on<sp/>a<sp/>separate<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th<sp/>=<sp/>threading.Thread(target=self.<ref refid="classrobot__states_1_1_robot_state_1ad7863501a879b48f6f2b7f057dfac0be" kindref="member">_is_battery_low</ref>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>th.start()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Log<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>(f</highlight><highlight class="stringliteral">&apos;Initialise<sp/>node<sp/>`{anm.NODE_ROBOT_STATE}`<sp/>with<sp/>services<sp/>`{anm.SERVER_GET_POSE}`<sp/>and<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&apos;`{anm.SERVER_SET_POSE}`,<sp/>and<sp/>topic<sp/>{anm.TOPIC_BATTERY_LOW}.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(log_msg,<sp/>LOG_TAG))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>`robot/set_pose`<sp/>service<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>`request`<sp/>input<sp/>parameter<sp/>is<sp/>the<sp/>current<sp/>robot<sp/>pose<sp/>to<sp/>be<sp/>set,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>as<sp/>given<sp/>by<sp/>the<sp/>client.<sp/>This<sp/>server<sp/>returns<sp/>an<sp/>empty<sp/>`response`.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">set_pose(self,<sp/>request):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>request.pose<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Store<sp/>the<sp/>new<sp/>current<sp/>robot<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a0894b6337f559998dbcab19f0343f20e" kindref="member">_pose</ref><sp/>=<sp/>request.pose</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Log<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1ae5dcf6e3a89f04850bb0c6c9751cb190" kindref="member">_print_info</ref>(f</highlight><highlight class="stringliteral">&apos;Set<sp/>current<sp/>robot<sp/>position<sp/>through<sp/>`{anm.SERVER_SET_POSE}`<sp/>&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&apos;as<sp/>({self._pose.x},<sp/>{self._pose.y}).&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(anm.tag_log(</highlight><highlight class="stringliteral">&apos;Cannot<sp/>set<sp/>an<sp/>unspecified<sp/>robot<sp/>position&apos;</highlight><highlight class="normal">,<sp/>LOG_TAG))</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Return<sp/>an<sp/>empty<sp/>response.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SetPoseResponse()</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>`robot/get_pose`<sp/>service<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>`request`<sp/>input<sp/>parameter<sp/>is<sp/>given<sp/>by<sp/>the<sp/>client<sp/>as<sp/>empty.<sp/>Thus,<sp/>it<sp/>is<sp/>not<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>`response`<sp/>returned<sp/>to<sp/>the<sp/>client<sp/>contains<sp/>the<sp/>current<sp/>robot<sp/>pose.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">get_pose(self,<sp/>request):</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Log<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a0894b6337f559998dbcab19f0343f20e" kindref="member">_pose</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.logerr(anm.tag_log(</highlight><highlight class="stringliteral">&apos;Cannot<sp/>get<sp/>an<sp/>unspecified<sp/>robot<sp/>position&apos;</highlight><highlight class="normal">,<sp/>LOG_TAG))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;Get<sp/>current<sp/>robot<sp/>position<sp/>through<sp/>`{anm.SERVER_GET_POSE}`<sp/>as<sp/>({self._pose.x},<sp/>{self._pose.y})&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1ae5dcf6e3a89f04850bb0c6c9751cb190" kindref="member">_print_info</ref>(log_msg)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>the<sp/>response<sp/>with<sp/>the<sp/>robot<sp/>pose<sp/>and<sp/>return<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response<sp/>=<sp/>GetPoseResponse()</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>response.pose<sp/>=<sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a0894b6337f559998dbcab19f0343f20e" kindref="member">_pose</ref></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>response</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Publish<sp/>changes<sp/>of<sp/>battery<sp/>levels.<sp/>This<sp/>method<sp/>runs<sp/>on<sp/>a<sp/>separate<sp/>thread.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_is_battery_low(self):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Define<sp/>a<sp/>`lathed`<sp/>publisher<sp/>to<sp/>wait<sp/>for<sp/>initialisation<sp/>and<sp/>publish<sp/>immediately.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publisher<sp/>=<sp/>rospy.Publisher(anm.TOPIC_BATTERY_LOW,<sp/>Bool,<sp/>queue_size=1,<sp/>latch=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a07dcafb11d018ed0754fecd03f089b56" kindref="member">_randomness</ref>:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Publish<sp/>battery<sp/>level<sp/>changes<sp/>randomly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a146fe012c2e683a0525ae7bfcbfc1aac" kindref="member">_random_battery_notifier</ref>(publisher)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Publish<sp/>battery<sp/>level<sp/>changes<sp/>through<sp/>a<sp/>keyboard-based<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1adfca0b26aaf6e4aa84e2669205a311b2" kindref="member">_manual_battery_notifier</ref>(publisher)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Publish<sp/>when<sp/>the<sp/>battery<sp/>change<sp/>state<sp/>(i.e.,<sp/>high/low)<sp/>based<sp/>on<sp/>a<sp/>random</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>delay<sp/>within<sp/>the<sp/>interval<sp/>[`self._random_battery_time[0]`,<sp/>`self._random_battery_time[1]`).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>message<sp/>is<sp/>published<sp/>through<sp/>the<sp/>`publisher`<sp/>input<sp/>parameter<sp/>and<sp/>is<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>boolean<sp/>value,<sp/>i.e.,<sp/>`True`:<sp/>battery<sp/>low,<sp/>`False`:<sp/>battery<sp/>high.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_random_battery_notifier(self,<sp/>publisher):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay<sp/>=<sp/>0<sp/><sp/></highlight><highlight class="comment">#<sp/>Initialised<sp/>to<sp/>0<sp/>just<sp/>for<sp/>logging<sp/>purposes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>rospy.is_shutdown():</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Publish<sp/>battery<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publisher.publish(Bool(self.<ref refid="classrobot__states_1_1_robot_state_1ac293784a2205f9675f0ec49a3aa274a2" kindref="member">_battery_low</ref>))</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Log<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1ac293784a2205f9675f0ec49a3aa274a2" kindref="member">_battery_low</ref>:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;Robot<sp/>got<sp/>low<sp/>battery<sp/>after<sp/>{delay}<sp/>seconds.&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_msg<sp/>=<sp/>f</highlight><highlight class="stringliteral">&apos;Robot<sp/>got<sp/>a<sp/>fully<sp/>charged<sp/>battery<sp/>after<sp/>{delay}<sp/>seconds.&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1ae5dcf6e3a89f04850bb0c6c9751cb190" kindref="member">_print_info</ref>(log_msg)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wait<sp/>for<sp/>simulate<sp/>battery<sp/>usage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay<sp/>=<sp/>random.uniform(self.<ref refid="classrobot__states_1_1_robot_state_1a8612658c942b05d58aacdbcae69dc44a" kindref="member">_random_battery_time</ref>[0],<sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a8612658c942b05d58aacdbcae69dc44a" kindref="member">_random_battery_time</ref>[1])</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.sleep(delay)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Change<sp/>battery<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1ac293784a2205f9675f0ec49a3aa274a2" kindref="member">_battery_low</ref><sp/>=<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1ac293784a2205f9675f0ec49a3aa274a2" kindref="member">_battery_low</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Allow<sp/>keyboard<sp/>interaction<sp/>to<sp/>emulate<sp/>battery<sp/>level<sp/>changes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>The<sp/>message<sp/>is<sp/>published<sp/>through<sp/>the<sp/>`publisher`<sp/>input<sp/>parameter<sp/>and<sp/>is<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>boolean<sp/>value,<sp/>i.e.,<sp/>`True`:<sp/>battery<sp/>low,<sp/>`False`:<sp/>battery<sp/>high.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_manual_battery_notifier(self,<sp/>publisher):</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Explain<sp/>keyboard-based<sp/>interaction.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>#<sp/>Type<sp/>`Low`<sp/>(`L`)<sp/>to<sp/>notify<sp/>that<sp/>the<sp/>battery<sp/>is<sp/>low,<sp/>`hiGh`<sp/>(`G`)<sp/>that<sp/>it<sp/>is<sp/>fully<sp/>charged.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;<sp/><sp/>#<sp/>Type<sp/>`cnt+C`<sp/>and<sp/>`Enter`<sp/>to<sp/>quit.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Publish<sp/>the<sp/>default<sp/>value<sp/>at<sp/>startup.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publisher.publish(Bool(self.<ref refid="classrobot__states_1_1_robot_state_1ac293784a2205f9675f0ec49a3aa274a2" kindref="member">_battery_low</ref>))</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Loop<sp/>to<sp/>enable<sp/>multiple<sp/>interactions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>rospy.is_shutdown():</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Wait<sp/>for<sp/>the<sp/>user<sp/>to<sp/>enter<sp/>a<sp/>battery<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_input<sp/>=<sp/>input(</highlight><highlight class="stringliteral">&apos;<sp/>&gt;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user_input<sp/>=<sp/>user_input.lower()</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Understand<sp/>the<sp/>entered<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>user_input<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;low&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>user_input<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;l&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1ac293784a2205f9675f0ec49a3aa274a2" kindref="member">_battery_low</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(</highlight><highlight class="stringliteral">&apos;Robot<sp/>got<sp/>low<sp/>battery.&apos;</highlight><highlight class="normal">,<sp/>LOG_TAG))</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>user_input<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;high&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>user_input<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;g&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1ac293784a2205f9675f0ec49a3aa274a2" kindref="member">_battery_low</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(</highlight><highlight class="stringliteral">&apos;Robot<sp/>got<sp/>a<sp/>fully<sp/>charged<sp/>battery.&apos;</highlight><highlight class="normal">,<sp/>LOG_TAG))</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Cannot<sp/>understand<sp/>the<sp/>entered<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;***<sp/>USER<sp/>INPUT<sp/>ERROR!<sp/>Try<sp/>again:&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Publish<sp/>the<sp/>massage<sp/>based<sp/>on<sp/>the<sp/>entered<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>error:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>publisher.publish(Bool(self.<ref refid="classrobot__states_1_1_robot_state_1ac293784a2205f9675f0ec49a3aa274a2" kindref="member">_battery_low</ref>))</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Print<sp/>logging<sp/>only<sp/>when<sp/>random<sp/>testing<sp/>is<sp/>active.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>This<sp/>is<sp/>done<sp/>to<sp/>allow<sp/>an<sp/>intuitive<sp/>usage<sp/>of<sp/>the<sp/>keyboard-based<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_print_info(self,<sp/>msg):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classrobot__states_1_1_robot_state_1a07dcafb11d018ed0754fecd03f089b56" kindref="member">_randomness</ref>:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.loginfo(anm.tag_log(msg,<sp/>LOG_TAG))</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Instantiate<sp/>the<sp/>node<sp/>manager<sp/>class<sp/>and<sp/>wait.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classrobot__states_1_1_robot_state" kindref="compound">RobotState</ref>()</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.spin()</highlight></codeline>
    </programlisting>
    <location file="scripts/robot_states.py"/>
  </compounddef>
</doxygen>
